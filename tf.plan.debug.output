
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
 [36m<=[0m read (data resources)[0m

Terraform planned the following actions, but then encountered a problem:

[1m  # terraform_data.known_data[0m will be created
[0m  [32m+[0m[0m resource "terraform_data" "known_data" {
      [32m+[0m[0m id     = (known after apply)
      [32m+[0m[0m input  = "1"
      [32m+[0m[0m output = (known after apply)
    }

[1m  # module.docs.data.kubectl_file_documents.docs[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "kubectl_file_documents" "docs" {
      [32m+[0m[0m content   = <<-EOT
            apiVersion: v1
            kind: docs
            metadata:
              name: doc1
            ---
            apiVersion: v1
            kind: docs
            metadata:
              name: doc2
        EOT
      [32m+[0m[0m documents = (known after apply)
      [32m+[0m[0m id        = (known after apply)
      [32m+[0m[0m manifests = (known after apply)
    }

[1mPlan:[0m 1 to add, 0 to change, 0 to destroy.
[0m[31mâ•·[0m[0m
[31mâ”‚[0m [0m[1m[31mError: [0m[0m[1mInvalid count argument[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0m[0m  on modules/docs/main.tf line 26, in resource "kubectl_manifest" "docs":
[31mâ”‚[0m [0m  26:   count     = [4mlength(data.kubectl_file_documents.docs.documents)[0m[0m
[31mâ”‚[0m [0m
[31mâ”‚[0m [0mThe "count" value depends on resource attributes that cannot be determined
[31mâ”‚[0m [0muntil apply, so Terraform cannot predict how many instances will be
[31mâ”‚[0m [0mcreated. To work around this, use the -target argument to first apply only
[31mâ”‚[0m [0mthe resources that the count depends on.
[31mâ•µ[0m[0m
